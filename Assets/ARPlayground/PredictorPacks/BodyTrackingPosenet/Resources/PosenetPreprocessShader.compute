#pragma kernel PreprocessResNet
#pragma kernel PreprocessMobileNet

// input image
Texture2D<float4> InputImage;
// processed image
RWTexture2D<float4> Result;

[numthreads(8, 8, 1)]
void PreprocessMobileNet(uint3 id : SV_DispatchThreadID)
{
    // normalize the color values to the range [-1,1] -> 2 * (value - min) / (max - min) - 1
    Result[id.xy] = float4(2.0f * InputImage[id.xy].r - 1.0h, 2.0f * InputImage[id.xy].g - 1.0f,
        2.0f * InputImage[id.xy].b - 1.0f, InputImage[id.xy].a);
}

[numthreads(8, 8, 1)]
void PreprocessResNet(uint3 id : SV_DispatchThreadID)
{
    // scale each color value to the range [0,255] and add the ImageNet mean value
    Result[id.xy] = float4(InputImage[id.xy].r * 255.0f - 123.15f, InputImage[id.xy].g * 255.0f - 115.90f,
        InputImage[id.xy].b * 255.0f - 103.06f, InputImage[id.xy].a);
}