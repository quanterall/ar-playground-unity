#pragma kernel Preprocess

sampler2D _InputTexture;
RWStructuredBuffer<float> _OutputBuffer;
int2 _Dimensions;

[numthreads(8, 8, 1)]
void Preprocess(uint3 id : SV_DispatchThreadID)
{
    // UV (vertically flipped)
    float2 uv = float2(0.5 + id.x, _Dimensions.y - 0.5 - id.y) / _Dimensions;

    // UV gradients
    float2 duv_dx = float2(1.0 / _Dimensions.x, 0);
    float2 duv_dy = float2(0, -1.0 / _Dimensions.y);

    // Texture sample
    float3 rgb = tex2Dgrad(_InputTexture, uv, duv_dx, duv_dy).rgb;

    // Tensor element output
    uint offs = (id.y * _Dimensions.x + id.x) * 3;
    _OutputBuffer[offs + 0] = rgb.r;
    _OutputBuffer[offs + 1] = rgb.g;
    _OutputBuffer[offs + 2] = rgb.b;
}
